# Fluentd configuration for Kubernetes
# Collect logs from pods with label who=denis

# Collect logs from Kubernetes pods
<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag kubernetes.*
  read_from_head true
  <parse>
    @type cri
    time_format %Y-%m-%dT%H:%M:%S.%N%:z
  </parse>
</source>

# Enrich with Kubernetes metadata
<filter kubernetes.**>
  @type kubernetes_metadata
  @id filter_kube_metadata
  kubernetes_url "#{ENV['KUBERNETES_URL'] || 'https://' + ENV['KUBERNETES_SERVICE_HOST'] + ':' + ENV['KUBERNETES_SERVICE_PORT'] + '/api'}"
  verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || 'true'}"
  ca_file "#{ENV['KUBERNETES_CA_FILE'] || '/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'}"
  skip_labels false
  skip_container_metadata false
  skip_namespace_metadata true
  skip_master_url false
</filter>

# Filter only pods with label who=denis
<filter kubernetes.**>
  @type grep
  <regexp>
    key $.kubernetes.labels.who
    pattern /^denis$/
  </regexp>
</filter>

# Extract project name and node name
<filter kubernetes.**>
  @type record_transformer
  enable_ruby true
  <record>
    project_name ${record.dig("kubernetes", "labels", "app") || "unknown"}
    server_name ${record.dig("kubernetes", "host") || "unknown-node"}
  </record>
</filter>

# Clean up log format
<filter kubernetes.**>
  @type parser
  key_name log
  reserve_data true
  remove_key_name_field true
  <parse>
    @type json
    # If logs are not JSON, comment the line above and uncomment:
    # @type none
  </parse>
</filter>

# Output to Elasticsearch
<match kubernetes.**>
  @type elasticsearch
  @id out_es
  include_timestamp true
  host "#{ENV['ELASTICSEARCH_HOST'] || 'elasticsearch'}"
  port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
  user "#{ENV['ELASTICSEARCH_USER'] || 'elastic'}"
  password "#{ENV['ELASTICSEARCH_PASSWORD'] || 'changeme'}"
  scheme "#{ENV['ELASTICSEARCH_SCHEME'] || 'http'}"
  ssl_verify "#{ENV['ELASTICSEARCH_SSL_VERIFY'] || 'false'}"
  ssl_version TLSv1_2
  
  # Dynamic index name: server_name-project_name-date
  index_name ${server_name}-${project_name}-%Y.%m.%d
  
  # Buffer configuration
  <buffer time,server_name,project_name>
    @type file
    path /var/log/fluentd-buffers/kubernetes.buffer
    flush_mode interval
    retry_type exponential_backoff
    flush_thread_count 2
    flush_interval 5s
    retry_forever false
    retry_max_interval 30
    chunk_limit_size 5MB
    queue_limit_length 8
    overflow_action block
  </buffer>
  
  # Connection settings
  reconnect_on_error true
  reload_on_failure true
  reload_connections false
  request_timeout 120s
  suppress_type_name true
</match>

# Optional: Prometheus metrics
<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

<source>
  @type prometheus_monitor
  interval 10
</source>